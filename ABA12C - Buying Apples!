#include <bits/stdc++.h>
using namespace std;
 
#define fio() ios_base::sync_with_stdio(false);\
cin.tie(NULL);
 
#define md 1000000007
typedef long long int lli;
typedef float fl;
#define mem(arr,x) memset(arr,x,sizeof(arr))


typedef struct tim
            {
               lli ar[2]; 
            }ti;


lli comparator(ti p,ti q) 
{ 
    return (   p.ar[0] < q.ar[0] ) ; 
} 

lli power(lli x, lli y, lli p) 
{ 
    lli res = 1;    
    x = x % p;  
    while (y > 0) 
    { 
        if (y & 1) 
            res = (res*x) % p; 
  
        y = y>>1; 
        x = (x*x) % p; 
    } 
    return res; 
}
 
 
int main()
{    
    fio();
    lli   t,c=1;
    cin>>t;
    while(t--)
    {
           lli n,m,i,j,k,l,z,ans=0;
           cin>>n>>k;
           vector<lli> apple_weight,apple_price;
           
           for(i=1;i<=k;i++)
           {
               lli temp;
               cin>>temp;
               if(temp!=-1)
               {
                    apple_weight.push_back(i);
                    apple_price.push_back(temp);
               }
          }
          
          lli ar[apple_weight.size()+1][k+1];
          
          for(i=0;i<apple_weight.size()+1;i++)
               ar[i][0]=0;
          
          for(i=0;i<k+1;i++)
               ar[0][i] = INT_MAX;
               
              
          for(i=1;i<apple_weight.size()+1;i++)
          {
               for(j=1;j<k+1;j++)
               {
                    if(j >= apple_weight[i-1]){
                         ar[i][j] = min(ar[i-1][j],apple_price[i-1]+ar[i][j-i]);
                    }
                    else ar[i][j] = ar[i-1][j];
               }
          }
          
          if(ar[apple_weight.size()][k] == INT_MAX) cout<<-1<<endl;
          else cout<<ar[apple_weight.size()][k]<<endl;
    } 
   
}
